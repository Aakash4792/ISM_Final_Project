{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Akash Sivakumar\\\\Desktop\\\\ISM_Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Akash Sivakumar\\\\Desktop\\\\ISM_Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Akash Sivakumar\\\\Desktop\\\\ISM_Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Akash Sivakumar\\\\Desktop\\\\ISM_Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Akash Sivakumar\\\\Desktop\\\\ISM_Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Akash Sivakumar\\\\Desktop\\\\ISM_Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Akash Sivakumar\\\\Desktop\\\\ISM_Project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Akash Sivakumar\\\\Desktop\\\\ISM_Project\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from \"react\";\nimport daiLogo from \"../dai-logo.png\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport DaiTokenMock from \"../abis/DaiTokenMock.json\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, daiTokenAddress, daiTokenMock, balance, transactions;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                daiTokenAddress = \"0x9b17bd2598F54C6658Cfe96007FaBB17af4A6506\";\n                daiTokenMock = new web3.eth.Contract(DaiTokenMock.abi, daiTokenAddress);\n                this.setState({\n                  daiTokenMock: daiTokenMock\n                });\n                _context3.next = 10;\n                return daiTokenMock.methods.balanceOf(this.state.account).call();\n\n              case 10:\n                balance = _context3.sent;\n                if (balance) this.setState({\n                  balance: web3.utils.fromWei(balance.toString(), \"Ether\")\n                });\n                _context3.next = 14;\n                return daiTokenMock.getPastEvents(\"Transfer\", {\n                  fromBlock: 0,\n                  toBlock: \"latest\",\n                  filter: {\n                    from: this.state.account\n                  }\n                });\n\n              case 14:\n                transactions = _context3.sent;\n                this.setState({\n                  transactions: transactions\n                });\n                console.log(this.state.balance);\n                console.log(accounts);\n\n              case 18:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"\",\n      daiTokenMock: null,\n      balance: 0,\n      transactions: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Akash Sivakumar\\Desktop\\ISM_Project\\src\\components\\App.js"],"names":["React","Component","daiLogo","Web3","DaiTokenMock","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","daiTokenAddress","daiTokenMock","Contract","abi","methods","balanceOf","state","call","balance","utils","fromWei","toString","getPastEvents","fromBlock","toBlock","filter","from","transactions","console","log","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;IAEMC,G;;;;;;;;;;;;;;;;uBAEI,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;;;qBAIFC,MAAM,CAACC,Q;;;;;AACTD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIP,IAAJ,CAASK,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AACD,oBAAIH,MAAM,CAACE,IAAX,EAAiB;AACtBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIP,IAAJ,CAASK,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,iBAFM,MAEA;AACLJ,kBAAAA,MAAM,CAACK,KAAP,CACE,qEADF;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIKH,gBAAAA,I,GAAOF,MAAM,CAACE,I;;uBACGA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKC,QAAL,CAAc;AAAEC,kBAAAA,OAAO,EAAEF,QAAQ,CAAC,CAAD;AAAnB,iBAAd;AACMG,gBAAAA,e,GAAkB,4C;AAClBC,gBAAAA,Y,GAAe,IAAIV,IAAI,CAACI,GAAL,CAASO,QAAb,CACnBjB,YAAY,CAACkB,GADM,EAEnBH,eAFmB,C;AAIrB,qBAAKF,QAAL,CAAc;AAAEG,kBAAAA,YAAY,EAAEA;AAAhB,iBAAd;;uBACsBA,YAAY,CAACG,OAAb,CACnBC,SADmB,CACT,KAAKC,KAAL,CAAWP,OADF,EAEnBQ,IAFmB,E;;;AAAhBC,gBAAAA,O;AAGN,oBAAIA,OAAJ,EACE,KAAKV,QAAL,CAAc;AACZU,kBAAAA,OAAO,EAAEjB,IAAI,CAACkB,KAAL,CAAWC,OAAX,CAAmBF,OAAO,CAACG,QAAR,EAAnB,EAAuC,OAAvC;AADG,iBAAd;;uBAGyBV,YAAY,CAACW,aAAb,CAA2B,UAA3B,EAAuC;AAChEC,kBAAAA,SAAS,EAAE,CADqD;AAEhEC,kBAAAA,OAAO,EAAE,QAFuD;AAGhEC,kBAAAA,MAAM,EAAE;AAAEC,oBAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWP;AAAnB;AAHwD,iBAAvC,C;;;AAArBkB,gBAAAA,Y;AAKN,qBAAKnB,QAAL,CAAc;AAAEmB,kBAAAA,YAAY,EAAEA;AAAhB,iBAAd;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWE,OAAvB;AACAU,gBAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;;;;;;;;;;;;;;;;;;AAGF,eAAYuB,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKd,KAAL,GAAa;AACXP,MAAAA,OAAO,EAAE,EADE;AAEXE,MAAAA,YAAY,EAAE,IAFH;AAGXO,MAAAA,OAAO,EAAE,CAHE;AAIXS,MAAAA,YAAY,EAAE;AAJH,KAAb;AAFiB;AAQlB;;;;6BACQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAzDenC,S;;AA4DlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport daiLogo from \"../dai-logo.png\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport DaiTokenMock from \"../abis/DaiTokenMock.json\";\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const daiTokenAddress = \"0x9b17bd2598F54C6658Cfe96007FaBB17af4A6506\";\n    const daiTokenMock = new web3.eth.Contract(\n      DaiTokenMock.abi,\n      daiTokenAddress\n    );\n    this.setState({ daiTokenMock: daiTokenMock });\n    const balance = await daiTokenMock.methods\n      .balanceOf(this.state.account)\n      .call();\n    if (balance)\n      this.setState({\n        balance: web3.utils.fromWei(balance.toString(), \"Ether\"),\n      });\n    const transactions = await daiTokenMock.getPastEvents(\"Transfer\", {\n      fromBlock: 0,\n      toBlock: \"latest\",\n      filter: { from: this.state.account },\n    });\n    this.setState({ transactions: transactions });\n    console.log(this.state.balance);\n    console.log(accounts);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      daiTokenMock: null,\n      balance: 0,\n      transactions: [],\n    };\n  }\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}